DEBUG=${DEBUG:-false}
if $DEBUG; then
    echo "-------------------------" >> ~/tmp/loginpaths.txt
    echo "zshrc> Start of execution" >> ~/tmp/loginpaths.txt
    echo "zshrc> PATH: ${PATH}" >> ~/tmp/loginpaths.txt
    echo "zshrc> path: ${path}" >> ~/tmp/loginpaths.txt
fi

# export TRY_THEMING=p10k
# enable powerlevel10k's instant prompt feature
if [[ -r ${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh ]]; then
    source ${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh 
fi

# if [ -d ${HOME}/miniconda/envs/py36 ]; then
#     conda activate py36
# fi

# begin section 1
# This first section adapted from https://www.outcoldman.com/en/archive/2015/09/13/keep-your-sh-together/

# If I see that zsh takes to much time to load I profile what has been changed,
# I want to see my shell ready in not more than 1 second
PROFILING=${PROFILING:-false}
if $PROFILING; then
    zmodload zsh/zprof
fi

# Location of my dotfiles
DOTFILES=$HOME/.dotfiles


# Speed up load time
DISABLE_UPDATE_PROMPT=true

# Execute code in the background to not affect the current session
{
    # Compile zcompdump, if modified, to increase startup speed.
    zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
    if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
        zcompile "$zcompdump"
    fi
} &!

# Perform compinit only once a day
autoload -Uz compinit
# if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
  compinit
else
  compinit -C
fi

# if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# tmux plugin settings
ZSH_TMUX_AUTOSTART_ONCE=true
ZSH_TMUX_FIXTERM=true
ZSH_TMUX_AUTOQUIT=false # tells TMUX not to close terminal once tmux exits

# set DEFAULT_USER based on ${USERNAME} variable
DEFAULT_USER=${USERNAME}

# end section 1

# use vi bindings
bindkey -v

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

[[ ! -f ${HOME}/.theming.zsh ]] || source ~/.theming.zsh

# dumb terminal can be a vim dump terminal in that case don't try to load plugins
if [ ! $TERM = dumb ]; then
    # ZGEN_DIR=${HOME}/.zgen
    source ${DOTFILES}/plugins/autojump/autojump.plugin.zsh
    source ${DOTFILES}/plugins/my-aliases/my-aliases.plugin.zsh
    # source ${DOTFILES}/plugins/my-brew/my-brew.plugin.zsh
    # source ${DOTFILES}/plugins/my-tmux/my-tmux.plugin.zsh
    source ${DOTFILES}/plugins/sudo/sudo.plugin.zsh
    # source ${DOTFILES}/plugins/taskwarrior/taskwarrior.plugin.zsh
    # source ${DOTFILES}/plugins/tmuxinator/tmuxinator.plugin.zsh
    # source ${DOTFILES}/plugins/tpm/tpm.plugin.zsh
    # source ${DOTFILES}/plugins/vi-mode/vi-mode.plugin.zsh
    # source ${DOTFILES}/plugins/vundle/vundle.plugin.zsh
    # source ${DOTFILES}/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
    # source ${DOTFILES}/plugins/zsh-completions/zsh-completions.plugin.zsh
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# additional configuration for zsh
# Remove the history (fc -l) command from the history list when invoked.
setopt histnostore
# Remove superfluous blanks from each command line being added to the history list.
setopt histreduceblanks
# Do not exit on end-of-file. Require the use of exit or logout instead.
# setopt ignoreeof
# Print the exit value of programs with non-zero exit status.
# setopt printexitvalue
# Do not share history
# setopt no_share_history
# Save history between sessions
HISTFILE=~/.zsh_histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory

# load local tmux configurations
tmux source-file ~/.tmux-local.conf

# specific for machine configuration, which I don't sync
if [ -f ~/.machinerc ]; then
    source ~/.machinerc
fi

# Switch between different python installations
# switch_python() {
#     echo "SP Start"
#     if [[ $0 == "local" ]]; then
#         echo "ARG local"
#         PATH=${PATH:s/.+PYTHON/\/usr\/local\/bin:PYTHON/}
#     elif [[ $0 == 'conda' ]]; then
#         echo "ARG conda"
#         if [[ $PATH =~ "anaconda" ]]; then
#             echo "Found anaconda in PATH"
#             PATH=${PATH:s/.+PYTHON/\/anaconda3\/bin\/:PYTHON/}
#         elif [[ $PATH =~ "miniconda3" ]]; then
#             echo "Found miniconda3 in PATH"
#             PATH=${PATH:s/.+PYTHON/${HOME}\/miniconda3\/bin:PYTHON/}
#         else
#             echo "Didn't find others, so presuming miniconda"
#             PATH=${PATH:s/.+PYTHON/${HOME}\/miniconda\/bin:PYTHON/}}
#         fi
#     fi
#     echo $PATH
#     echo $(which python)
# }

# Load direnv, which hopefully will speed up prompt generation
# export DIRENV_LOG_FORMAT=
# eval "$(direnv hook zsh)"

# if profiling was on
if $PROFILING; then
    zprof
fi

# zsh-syntax-highlighting must be sourced as the last thing in this file
source ~/.dotfiles/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
if $DEBUG; then
    echo "zshrc> PATH: ${PATH}" >> ~/tmp/loginpaths.txt
    echo "zshrc> path: ${path}" >> ~/tmp/loginpaths.txt
    echo "zshrc> End of execution" >> ~/tmp/loginpaths.txt
    echo "-------------------------" >> ~/tmp/loginpaths.txt
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/jon/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/jon/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/jon/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/jon/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

conda activate

# instead of using the miniconda loading above immediately
# use a plugin to lazy-load conda
# source ${DOTFILES}/plugins/lazy-conda/lazy-conda.plugin.zsh

# fix up the $path list using my path plugin
source ${DOTFILES}/plugins/my-path/my-path.plugin.zsh

#  export NVM_DIR="$HOME/.nvm"
# [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
# [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

[[ ! -f ${HOME}/.zshrc-local ]] || source ~/.zshrc-local
fpath+=${ZDOTDIR:-~}/.zsh_functions
